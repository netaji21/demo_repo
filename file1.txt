Perfect 👍 Let’s go step by step so you can **do all these Git + GitHub operations using PowerShell** easily.

---

## 🧩 **Goal**

We’ll go from creating a local file → connecting to GitHub → pushing and pulling changes both ways.

---

## 🪟 **Step-by-Step Guide (PowerShell + GitHub)**

---

### **Step 1: Create a local folder and file**

Open **PowerShell** and type:

```bash
cd Desktop       # or any folder you prefer
mkdir demo_repo
cd demo_repo
```

Now create a file:

```bash
echo "Hello GitHub" > file1.txt
```

---

### **Step 2: Initialize Git**

Inside `demo_repo`:

```bash
git init
```

---

### **Step 3: Add and Commit the File**

```bash
git add file1.txt
git commit -m "Initial commit"
```

---

### **Step 4: Create a Repository on GitHub**

1. Go to [https://github.com](https://github.com)
2. Click **New Repository**
3. Give it a name, e.g., `demo_repo`
4. Keep it **Public** or **Private**
5. Don’t add README or license
6. Click **Create repository**

---

### **Step 5: Link Local Repo with GitHub**

Copy the HTTPS URL from GitHub (e.g.):

```
https://github.com/yourusername/demo_repo.git
```

In PowerShell:

```bash
git remote add origin https://github.com/yourusername/demo_repo.git
```

---

### **Step 6: Push to GitHub**

```bash
git push -u origin master
```

> ✅ If your branch is called `main`, use:

```bash
git push -u origin main
```

After this, refresh GitHub — you’ll see your file.

---

### **Step 7: Modify file in GitHub**

Edit your file directly on GitHub → Commit the change.

---

### **Step 8: Pull Changes from GitHub to Local**

```bash
git pull
```

Now your local copy has the GitHub edit.

---

### **Step 9: Modify Locally Again**

```bash
echo "Added from local system" >> file1.txt
git add file1.txt
git commit -m "Updated locally"
```



### **Step 10: Push Again**

```bash
git push
```



